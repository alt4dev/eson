name: Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.17.7'
    - name: Go Version
      run: "go version"
    - name: Run Tests
      run: "go test -v -race -coverprofile=coverage.txt -covermode=atomic ./..."
    - uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.txt
        flags: golang-core
        fail_ci_if_error: false
    - uses: actions-ecosystem/action-get-latest-tag@v1
        name: Get Current Tag Deployed
        id: get-current-tag
    - name: Get Latest Tag
      id: get-latest-tag
      run: echo "::set-output name=tag::$(cat version)"
    - uses: actions-ecosystem/action-push-tag@v1
      name: Push latest Version
      with:
        tag: ${{ steps.get-latest-tag.outputs.tag }}
        message: '${{ steps.get-latest-tag.outputs.tag }}: ${{ github.event.head_commit.message }}'
      if: ${{ steps.get-latest-tag.outputs.tag != steps.get-current-tag.outputs.tag }}
